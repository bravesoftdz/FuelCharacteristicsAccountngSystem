unit ReservoirKindReferenceSuiteRepository;

interface

uses

  DomainObjectRepository,
  ReservoirKindReferenceSuite;

type

  IReservoirKindReferenceSuiteRepository =
    interface (IDomainObjectRepository)

      function Add(
        ReservoirKindReferenceSuite: TReservoirKindReferenceSuite
      ): Boolean;
      
      function AddReservoirKindReferenceSuites(
        ReservoirKindReferenceSuite: TReservoirKindReferenceSuites
      ): Boolean;
      
      function UpdateReservoirKindReferenceSuite(
        ReservoirKindReferenceSuite: TReservoirKindReferenceSuite
      ): Boolean;

      function UpdateReservoirKindReferenceSuites(
        ReservoirKindReferenceSuites: TReservoirKindReferenceSuites
      ): Boolean;

      function RemoveReservoirKindReferenceSuite(
        ReservoirKindReferenceSuite: TReservoirKindReferenceSuite
      ): Boolean;

      function RemoveReservoirKindReferenceSuites(
        ReservoirKindReferenceSuites: TReservoirKindReferenceSuites
      ): Boolean;
      
      function FindReservoirKindReferenceSuiteByIdentity(
        Identity: Variant
      ): TReservoirKindReferenceSuite;
      
      function FindDomainObjectsByIdentities(const Identities: TVariantList): TDomainObjectList;
      function LoadAll: TDomainObjectList;

    end;

implementation

end.
