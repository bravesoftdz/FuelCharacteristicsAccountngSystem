unit StandardWorkingTimeConditionsRuleRegistry;

interface

uses

  WorkingTimeConditionsRuleRegistry,
  WorkingTimeConditionsRules,
  SysUtils,
  Classes;

type

  TWorkingTimeConditionsRuleRegistry =
    class (TInterfacedObject, IWorkingTimeConditionsRuleRegistry)

      private

        function IsStandardWorkingTimeConditionsRulesRegistered: Boolean;
        
      private

        FWorkingTimeConditionsRules: TWorkingTimeConditionsRules;
        
      public

        procedure RegisterWorkingTimeConditionsRules(
          WorkingTimeConditionsRules: TWorkingTimeConditionsRules
        );

        function GetWorkingTimeConditionsRules:
          TWorkingTimeConditionsRules;

        procedure RegisterStandardWorkingTimeConditionsRules;

    end;
    
implementation

uses

  StandardWorkingTimeConditionsAccessingRule;

{ TWorkingTimeConditionsRuleRegistry }

function TWorkingTimeConditionsRuleRegistry.
  GetWorkingTimeConditionsRules: TWorkingTimeConditionsRules;
begin

end;

function TWorkingTimeConditionsRuleRegistry.
  IsStandardWorkingTimeConditionsRulesRegistered: Boolean;
begin

  Result :=

    Assigned(FWorkingTimeConditionsRules) and
    (FWorkingTimeConditionsRules
      .WorkingTimeConditionsAccessingRule
        .Self
          .ClassType = TStandardWorkingTimeConditionsAccessingRule);

end;

procedure TWorkingTimeConditionsRuleRegistry.
  RegisterStandardWorkingTimeConditionsRules;
begin

  if IsStandardWorkingTimeConditionsRulesRegistered then
    Exit;

  FWorkingTimeConditionsRules := TWorkingTimeConditionsRules.Create;

  try

    FWorkingTimeConditionsRules.WorkingTimeConditionsAccessingRule :=
      TStandardWorkingTimeConditionsAccessingRule.Create;
      
  except

    on E: Exception do begin

      FreeAndNil(FWorkingTimeConditionsRules);

      raise;
      
    end;

  end;

end;

procedure TWorkingTimeConditionsRuleRegistry.
  RegisterWorkingTimeConditionsRules(
    WorkingTimeConditionsRules: TWorkingTimeConditionsRules
  );
begin

  if IsStandardWorkingTimeConditionsRulesRegistered then
    FreeAndNil(FWorkingTimeConditionsRules);

  FWorkingTimeConditionsRules := WorkingTimeConditionsRules;
  
end;

end.
