unit unIWorkingTimeConditions;

interface

uses

  Employee,
  DomainException,
  IDomainObjectUnit;

type

  TWorkingTimeConditionsException = class (TDomainException)

  end;
  
  IWorkingTimeConditions = interface (IDomainObject)

    function GetName: String;
    function GetWorkingDayBeginningTime: TDateTime;
    function GetIsActive: Boolean;
    function GetEditingEmployee: TEmployee;

    procedure SetName(const Name: String);
    procedure SetWorkingDayBeginningTime(const Duration: TDateTime);
    procedure SetIsActive(const Value: Boolean);
    procedure SetEditingEmployee(const Employee: TEmployee);
    
    property Name: String read GetName write SetName;

    property WorkingDayBeginningTime: TDateTime
    read GetWorkingDayBeginningTime write SetWorkingDayBeginningTime;

    property WorkingDayEndingTime: TDateTime
    read GetWorkingDayEndingTime write SetWorkingDayEndingTime;

    property IsActive: Boolean read GetIsActive write SetIsActive;
    
    property EditingEmployee: TEmployee
    read GetEditingEmployee write SetEditingEmployee;
    
  end;

implementation

end.
