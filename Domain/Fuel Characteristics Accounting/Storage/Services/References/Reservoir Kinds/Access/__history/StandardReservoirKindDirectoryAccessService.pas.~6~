unit StandardReservoirKindDirectoryAccessService;

interface

uses

  ReservoirKindDirectoryAccessService,
  Employee,
  ReservoirKindDirectoryAccessRights,
  SysUtils,
  Classes;

type

  TStandardReservoirKindDirectoryAccessService =
    class (TInterfacedObject, IReservoirKindDirectoryAccessService)

      public

        function GetReservoirKindDirectoryAccessRightsForEmployee(
          Employee: TEmployee
        ): TReservoirKindDirectoryAccessRights; virtual;

        function EnsureAndGetReservoirKindDirectoryAccessRightsForEmployee(
          Employee: TEmployee
        ): TReservoirKindDirectoryAccessRights; virtual;

    end;
  
implementation

{ TStandardReservoirKindDirectoryAccessService }

function TStandardReservoirKindDirectoryAccessService.
  EnsureAndGetReservoirKindDirectoryAccessRightsForEmployee(
    Employee: TEmployee
  ): TReservoirKindDirectoryAccessRights;
begin

  Result :=
    GetReservoirKindDirectoryAccessRightsForEmployee(Employee);

  try

  except

    on e: Exception do begin

      FreeAndNil(Result);

      raise;
      
    end;

  end;

end;

function TStandardReservoirKindDirectoryAccessService.
  GetReservoirKindDirectoryAccessRightsForEmployee(
    Employee: TEmployee
  ): TReservoirKindDirectoryAccessRights;
begin

end;

end.
