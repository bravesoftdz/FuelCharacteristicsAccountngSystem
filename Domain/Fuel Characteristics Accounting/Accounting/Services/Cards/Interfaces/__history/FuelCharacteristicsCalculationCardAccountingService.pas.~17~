unit FuelCharacteristicsCalculationCardAccountingService;

interface

uses

  DomainException,
  FuelCharacteristicsCalculationCard,
  FuelCharacteristicsCalculationCardAccessRights,
  Employee;

type

  TFuelCharacteristicsCalculationCardAccountingServiceException =
    class (TDomainException)

    end;
    
  IFuelCharacteristicsCalculationCardAccountingService = interface

    procedure TakeFuelCharacteristicsCalculationCardAndAccessRights(
      RequestingEmployee: TEmployee;
      CardIdentity: Variant;
      var Card: TFuelCharacteristicsCalculationCard;
      var CardAccessRights: TFuelCharacteristicsCalculationCardAccessRights
    );

    procedure PerformNewFuelCharacteristicsCalculationCardAccounting(
      FuelCharacteristicsCalculationCard: TFuelCharacteristicsCalculationCard;
      RequestingEmployee: TEmployee
    );

    procedure PerformExistingFuelCharacteristicsCalculationCardAccounting(
      FuelCharacteristicsCalculationCard: TFuelCharacteristicsCalculationCard;
      RequestingEmployee: TEmployee
    );
    
    procedure RemoveFuelCharacteristicsCalculationCard(
      RequestingEmployee: TEmployee;
      CardIdentity: Variant
    );
    
  end;

implementation

end.
