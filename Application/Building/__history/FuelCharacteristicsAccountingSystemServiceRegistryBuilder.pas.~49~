unit FuelCharacteristicsAccountingSystemServiceRegistryBuilder;

interface

uses

  FuelCharacteristicsAccountingSystemServiceRegistry,
  SystemAuthentificationService,
  FuelCharacteristicsAccountingSystemAuthorizationService,
  SystemAdministrationService,
  EmployeeAccountsService,
  EmployeeAccountsAccessRightsService,
  EmployeeAccountSetReadService,
  SysUtils,
  Classes;

type

  TFuelCharacteristicsAccountingSystemServiceRegistryBuilder = class

    private

      FSystemServiceRegistry: IFuelCharacteristicsAccountingSystemServiceRegistry;
      
    public

      function UseDatabaseServerRoleAuthentificationService:
        TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
      
    public

      function UseFullSuccessedStubSystemAuthentificationService: TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
      function UseFullSuccessedStubSystemAuthorizationService: TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
      function UseFullSuccessedStubSystemAdministrationService: TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;

    public

      constructor Create;

      function Build: IFuelCharacteristicsAccountingSystemServiceRegistry;

  end;
  

implementation

uses

  DatabaseServerRoleAuthentificationService,
  ZQueryExecutorFactory,
  QueryExecutorFactory,
  StubEmployeeAccountSetReadService,
  StubEmployeeAccountsAccessRightsService,
  StandardEmployeeAccountsService,
  StandardFuelCharacteristicsAccountingAdministrationService,
  FullSuccessedStubFuelCharacteristicsAccountingSystemAuthentificationService,
  FullSuccessedStubFuelCharacteristicsAccountingSystemAuthorizationService,
  InMemoryFuelCharacteristicsAccountingSystemServiceRegistry;
  
{ TFuelCharacteristicsAccountingSystemServiceRegistryBuilder }

function TFuelCharacteristicsAccountingSystemServiceRegistryBuilder.UseFullSuccessedStubSystemAdministrationService: TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
var SystemAdministrationService: ISystemAdministrationService;
    EmployeeAccountsService: IEmployeeAccountsService;
    EmployeeAccountsAccessRightsService: IEmployeeAccountsAccessRightsService;
    EmployeeAccountSetReadService: IEmployeeAccountSetReadService;
begin

  EmployeeAccountsAccessRightsService :=
    TStubEmployeeAccountsAccessRightsService.Create;

  EmployeeAccountSetReadService :=
    TStubEmployeeAccountSetReadService.Create;

  EmployeeAccountsService :=
    TStandardEmployeeAccountsService.Create(
      EmployeeAccountsAccessRightsService,
      EmployeeAccountSetReadService
    );

  SystemAdministrationService :=
    TStandardFuelCharacteristicsAccountingAdministrationService.Create(
      FSystemServiceRegistry.GetSystemAuthorizationService,
      EmployeeAccountsService
    );

  FSystemServiceRegistry.RegisterSystemAdministrationService(
    SystemAdministrationService
  );

  Result := Self;
  
end;

function TFuelCharacteristicsAccountingSystemServiceRegistryBuilder.
  UseFullSuccessedStubSystemAuthentificationService:
    TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
var SystemAuthentificationService: ISystemAuthentificationService;
begin

  SystemAuthentificationService :=
    TFullSuccessedStubFuelCharacteristicsAccountingSystemAuthentificationService.Create;

  FSystemServiceRegistry.RegisterSystemAuthentificationService(
    SystemAuthentificationService
  );

  Result := Self;
  
end;

function TFuelCharacteristicsAccountingSystemServiceRegistryBuilder.
  UseFullSuccessedStubSystemAuthorizationService: TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
var SystemAuthorizationService: IFuelCharacteristicsAccountingSystemAuthorizationService;
begin

  SystemAuthorizationService :=
    TFullSuccessedStubFuelCharacteristicsAccountingSystemAuthorizationService.Create;

  FSystemServiceRegistry.RegisterSystemAuthorizationService(
    SystemAuthorizationService
  );

  Result := Self;
  
end;

function TFuelCharacteristicsAccountingSystemServiceRegistryBuilder.
  UseSystemAuthentificationService:
    TFuelCharacteristicsAccountingSystemServiceRegistryBuilder;
var UserAccountDbSchemaData: TUserRoleAccountDbSchemaData;
    QueryExecutorFactory: IQueryExecutorFactory;
    SystemAuthentificationService: ISystemAuthentificationService;
begin

  UserAccountDbSchemaData := TUserRoleAccountDbSchemaData.Create;

  UserAccountDbSchemaData.TableName := 'fca.user_accounts';
  UserAccountDbSchemaData.UserIdColumnName := 'user_id';
  UserAccountDbSchemaData.UserLoginColumnName := 'login';
  UserAccountDbSchemaData.UserFriendlyNameColumnName := 'user_full_name';
  UserAccountDbSchemaData.RoleTableName := 'fca.roles';
  UserAccountDbSchemaData.RoleIdColumnName := 'role_id';
  UserAccountDbSchemaData.RoleFriendlyNameColumnName := 'role_name';
  UserAccountDbSchemaData.RoleIdForeignKeyColumnName := 'employee_role_id';

  QueryExecutorFactory := TZQueryExecutorFactory.Create('postgresql');

  SystemAuthentificationService :=
    TDatabaseServerRoleAuthentificationService.Create(
      UserAccountDbSchemaData,
      QueryExecutorFactory
    );

  FSystemServiceRegistry.RegisterSystemAuthentificationService(
    SystemAuthentificationService
  );

  Result := Self;

end;

function TFuelCharacteristicsAccountingSystemServiceRegistryBuilder.Build: IFuelCharacteristicsAccountingSystemServiceRegistry;
begin

  Result := FSystemServiceRegistry;
  
end;

constructor TFuelCharacteristicsAccountingSystemServiceRegistryBuilder.Create;
begin

  inherited;

  FSystemServiceRegistry :=
    TInMemoryFuelCharacteristicsAccountingSystemServiceRegistry.Create;

end;

end.
