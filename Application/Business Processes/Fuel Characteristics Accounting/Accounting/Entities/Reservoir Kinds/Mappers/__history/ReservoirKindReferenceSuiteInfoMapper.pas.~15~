unit ReservoirKindReferenceSuiteInfoMapper;

interface

uses

  ReservoirKindReferenceSuite,
  ReservoirKindReferenceSuiteInfo,
  ReservoirKindReferenceSuiteAccessRights,
  ReservoirKindReferenceSuiteMapper,
  ReservoirKindReferenceSuiteAccessRightsDto,
  SysUtils;

type

  TReservoirKindReferenceSuiteInfoMapper = class

    private

      FReservoirKindReferenceSuiteMapper: TReservoirKindReferenceSuiteMapper;

      function MapReservoirKindReferenceSuiteAcessRightsDtoFrom(
        ReservoirKindReferenceSuiteAccessRights:
          TReservoirKindReferenceSuiteAccessRights
      ): TReservoirKindReferenceSuiteAccessRightsDto;

    public

      destructor Destroy; override;
      constructor Create;

      function MapReservoirKindReferenceSuiteInfoFrom(
        ReservoirKindReferenceSuite: TReservoirKindReferenceSuite;
        ReservoirKindReferenceSuiteAccessRights: TReservoirKindReferenceSuiteAccessRights
      ): TReservoirKindReferenceSuiteInfo;

  end;
  
implementation

{ TReservoirKindReferenceSuiteInfoMapper }

constructor TReservoirKindReferenceSuiteInfoMapper.Create;
begin

  inherited;

  FReservoirKindReferenceSuiteMapper := TReservoirKindReferenceSuiteMapper.Create;
  
end;

destructor TReservoirKindReferenceSuiteInfoMapper.Destroy;
begin

  FreeAndNil(FReservoirKindReferenceSuiteMapper);
  
  inherited;

end;

function TReservoirKindReferenceSuiteInfoMapper.
  MapReservoirKindReferenceSuiteAcessRightsDtoFrom(
    ReservoirKindReferenceSuiteAccessRights: TReservoirKindReferenceSuiteAccessRights
  ): TReservoirKindReferenceSuiteAccessRightsDto;
begin

  Result := TReservoirKindReferenceSuiteAccessRightsDto.Create;

  try

  except

    on e: Exception do begin

      FreeAndNil(Result);

      raise;
      
    end;

  end;

end;

function TReservoirKindReferenceSuiteInfoMapper.
  MapReservoirKindReferenceSuiteInfoFrom(
    ReservoirKindReferenceSuite: TReservoirKindReferenceSuite;
    ReservoirKindReferenceSuiteAccessRights: TReservoirKindReferenceSuiteAccessRights
  ): TReservoirKindReferenceSuiteInfo;
begin

end;

end.
