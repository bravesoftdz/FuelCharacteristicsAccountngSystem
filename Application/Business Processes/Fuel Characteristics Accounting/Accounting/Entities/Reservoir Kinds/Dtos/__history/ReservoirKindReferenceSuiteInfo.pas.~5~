unit ReservoirKindReferenceSuiteInfo;

interface

uses

  ReservoirKindReferenceSuiteDto,
  ReservoirKindReferenceSuiteAccessRightsDto,
  SysUtils;

type

  TReservoirKindReferenceSuiteInfo = class

    private

      FReservoirKindReferenceSuiteDto: TReservoirKindReferenceSuiteDto;

      FReservoirKindReferenceSuiteAccessRightsDto:
        TReservoirKindReferenceSuiteAccessRightsDto;
    procedure SetReservoirKindReferenceSuiteAccessRightsDto(
      const Value: TReservoirKindReferenceSuiteAccessRightsDto);
    procedure SetReservoirKindReferenceSuiteDto(
      const Value: TReservoirKindReferenceSuiteDto);

    public

      destructor Destroy; override;
      constructor Create;

      property ReservoirKindReferenceSuiteDto: TReservoirKindReferenceSuiteDto
      read FReservoirKindReferenceSuiteDto
      write SetReservoirKindReferenceSuiteDto;

      property ReservoirKindReferenceSuiteAccessRightsDto:
        TReservoirKindReferenceSuiteAccessRightsDto
      read FReservoirKindReferenceSuiteAccessRightsDto
      write SetReservoirKindReferenceSuiteAccessRightsDto;

  end;

implementation

{ TReservoirKindReferenceSuiteInfo }

constructor TReservoirKindReferenceSuiteInfo.Create;
begin

  inherited;

  FReservoirKindReferenceSuiteDto := TReservoirKindReferenceSuiteDto.Create;

  FReservoirKindReferenceSuiteAccessRightsDto :=
    TReservoirKindReferenceSuiteAccessRightsDto.Create;
    
end;

destructor TReservoirKindReferenceSuiteInfo.Destroy;
begin

  inherited;
end;

procedure TReservoirKindReferenceSuiteInfo.SetReservoirKindReferenceSuiteAccessRightsDto(
  const Value: TReservoirKindReferenceSuiteAccessRightsDto);
begin
  FReservoirKindReferenceSuiteAccessRightsDto := Value;
end;

procedure TReservoirKindReferenceSuiteInfo.SetReservoirKindReferenceSuiteDto(
  const Value: TReservoirKindReferenceSuiteDto);
begin
  FReservoirKindReferenceSuiteDto := Value;
end;

end.
