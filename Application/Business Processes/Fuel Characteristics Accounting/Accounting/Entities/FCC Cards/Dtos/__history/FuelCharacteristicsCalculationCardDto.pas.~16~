unit FuelCharacteristicsCalculationCardDto;

interface

uses

  EntityDto,
  EmployeeDto,
  SysUtils,
  Classes;

type

  TFuelCharacteristicsCalculationCardDto = class (TEntityDto)

    private

      FPerformedCalculationEmployeeDto: TEmployeeDto;
      
      function GetPerformedCalculationEmployeeDto: TEmployeeDto;
      procedure SetPerformedCalculationEmployeeDto(const Value: TEmployeeDto);

    public

      
      FuelTemperature: Single;
      FuelDensity: Single;
      FuelRiseLevel: Single;
      FuelVolume: Single;
      FuelKind: String;
      ReservoirNumber: Integer;
      CalculationPerformingDateTime: TDateTime;

      property PerformedCalculationEmployeeDto: TEmployeeDto
      read GetPerformedCalculationEmployeeDto
      write SetPerformedCalculationEmployeeDto;

      destructor Destroy; override;
      
      constructor Create;

  end;

implementation

{ TFuelCharacteristicsCalculationCardDto }

constructor TFuelCharacteristicsCalculationCardDto.Create;
begin

end;

destructor TFuelCharacteristicsCalculationCardDto.Destroy;
begin

  FreeAndNil(FPerformedCalculationEmployeeDto);
  
  inherited;

end;

function TFuelCharacteristicsCalculationCardDto.
  GetPerformedCalculationEmployeeDto: TEmployeeDto;
begin

  Result := FPerformedCalculationEmployeeDto;

end;

procedure TFuelCharacteristicsCalculationCardDto.
  SetPerformedCalculationEmployeeDto(
    const Value: TEmployeeDto
  );
begin

  if FPerformedCalculationEmployeeDto = Value then
    Exit;

  FreeAndNil(FPerformedCalculationEmployeeDto);

  FPerformedCalculationEmployeeDto := Value;
  
end;

end.
