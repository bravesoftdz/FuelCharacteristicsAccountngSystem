unit FuelCharacteristicsCalculationCardFormControllerEvents;

interface

uses

  Event,
  FuelCharacteristicsCalculationCardFormViewModel,
  Disposable,

  SysUtils,
  Classes;

type

  TNewFuelCharacteristicsCalculationSavedEvent = class (TEvent)


  end;

  TFuelCharacteristicsCalculationChangedEvent = class (TEvent)

    private

      FViewModel: TFuelCharacteristicsCalculationCardFormViewModel;
      FFreeViewModel: IDisposable;

      procedure SetViewModel(
        const Value: TFuelCharacteristicsCalculationCardFormViewModel);

    public

      constructor Create(
        ViewModel: TFuelCharacteristicsCalculationCardFormViewModel
      );

      property FuelCharacteristicsCalculationCardFormViewModel:
        TFuelCharacteristicsCalculationCardFormViewModel
      read FViewModel write SetViewModel;

  end;

implementation

{ TNewFuelCharacteristicsCalculationSavedEvent }

constructor TFuelCharacteristicsCalculationChangedEvent.Create(
  ViewModel: TFuelCharacteristicsCalculationCardFormViewModel);
begin

  inherited Create;

  FuelCharacteristicsCalculationCardFormViewModel := ViewModel;

end;

procedure TFuelCharacteristicsCalculationChangedEvent.SetViewModel(
  const Value: TFuelCharacteristicsCalculationCardFormViewModel);
begin

  if FViewModel = Value then
    Exit;

  FViewModel := Value;
  FFreeViewModel := FViewModel;

end;

end.
