unit FuelCharacteristicsCalculationCardFormViewModel;

interface

uses

  CardFormViewModel,
  SysUtils,
  Classes;

type

  TFuelCharacteristicsCalculationCardFormViewModel = class (TCardFormViewModel)

    private

      FId: TCardFormViewModelProperty;
      FFuelTemperature: TCardFormViewModelProperty;
      FFuelDensity: TCardFormViewModelProperty;
      FFuelRiseLevel: TCardFormViewModelProperty;
      FFuelVolume: TCardFormViewModelProperty;
      FFuelKind: TCardFormViewModelProperty;

      FWhoPerformedCalculation: TCardFormViewModelProperty;
      FCalculationPerformingDateTime: TCardFormViewModelProperty;

    protected

      function IsPropertyModified(ViewModelProperty: TCardFormViewModelProperty): Boolean; override;
      
    public

      destructor Destroy; override;
      constructor Create; override;

      property Id: TCardFormViewModelProperty
      read FId;

      property FuelTemperature: TCardFormViewModelProperty
      read FFuelTemperature;

      property FuelDensity: TCardFormViewModelProperty
      read FFuelDensity;

      property FuelRiseLevel: TCardFormViewModelProperty
      read FFuelRiseLevel;

      property FuelVolume: TCardFormViewModelProperty
      read FFuelVolume;

      property WhoPerformedCalculation: TCardFormViewModelProperty
      read FWhoPerformedCalculation;

      property CalculationPerformingDateTime: TCardFormViewModelProperty
      read FCalculationPerformingDateTime;

  end;

implementation

uses

  Variants;

{ TFuelCharacteristicsCalculationCardFormViewModel }

constructor TFuelCharacteristicsCalculationCardFormViewModel.Create;
begin

  inherited;

  FId := AddProperty('Id'); FId.Value := Null;

  FFuelTemperature := AddProperty('FuelTemperature');
  FFuelDensity := AddProperty('FuelDensity');
  FFuelRiseLevel := AddProperty('FuelRiseLevel');
  FFuelVolume := AddProperty('FuelVolume');

  FWhoPerformedCalculation := AddProperty('WhoPerformedCalculation');
  FCalculationPerformingDateTime := AddProperty('CalculationPerformingDateTime');

end;

destructor TFuelCharacteristicsCalculationCardFormViewModel.Destroy;
begin

  inherited;

end;

function TFuelCharacteristicsCalculationCardFormViewModel.IsPropertyModified(
  ViewModelProperty: TCardFormViewModelProperty): Boolean;
begin

  if ViewModelProperty = FId then
    Result := False

  else
    Result := inherited IsPropertyModified(ViewModelProperty);

end;

end.
