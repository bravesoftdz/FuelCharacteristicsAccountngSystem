unit EmployeeDtoMapper;

interface

uses

  EmployeeDto,
  EmployeeCardFormViewModel,
  EntityDtoMapper,
  CardFormViewModel,
  RoleDtoMapper,
  EntityDto,
  SysUtils,
  Classes;

type

  TEmployeeDtoMapper = class (TEntityDtoMapper)

    private

      FRoleDtoMapper: TRoleDtoMapper;

    protected

      function GetEntityDtoClass: TEntityDtoClass; override;

      procedure FillEntityDtoFrom(
        EntityDto: TEntityDto;
        CardFormViewModel: TCardFormViewModel
      ); override;
    
    public

      destructor Destroy; override;

      constructor Create;
      
      function MapEmployeeDtoFrom(
        EmployeeCardFormViewModel: TEmployeeCardFormViewModel
      ): TEmployeeDto;
      
  end;
  

implementation

{ TEmployeeDtoMapper }

constructor TEmployeeDtoMapper.Create;
begin

  inherited;

  FRoleDtoMapper := TRoleDtoMapper.Create;

end;

destructor TEmployeeDtoMapper.Destroy;
begin

  FreeAndNil(FRoleDtoMapper);
  
  inherited;

end;

procedure TEmployeeDtoMapper.FillEntityDtoFrom(
  EntityDto: TEntityDto;
  CardFormViewModel: TCardFormViewModel
);
var EmployeeDto: TEmployeeDto;
begin

  inherited;

  EmployeeDto := TEmployeeDto(EntityDto);

  with CardFormViewModel as TEmployeeCardFormViewModel do begin

    EmployeeDto.Name := Name.Value;
    EmployeeDto.Surname := Surname.Value;
    EmployeeDto.Patronymic := Patronymic.Value;
    EmployeeDto.BirthDate := BirthDate.Value;
    EmployeeDto.Speciality := Speciality.Value;
    
  end;

end;

function TEmployeeDtoMapper.GetEntityDtoClass: TEntityDtoClass;
begin

end;

function TEmployeeDtoMapper.MapEmployeeDtoFrom(
  EmployeeCardFormViewModel: TEmployeeCardFormViewModel): TEmployeeDto;
begin

end;

end.
